name: Tests

on: [push, pull_request]

jobs:
  build:
    name: Build & Test ðŸ”§
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-Key
          restore-keys: |
            Library-Key

      # Test
      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          artifactsPath: artifacts
          coveragePath: coverage

      # Test Coverage
      - name: Test coverage
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.tests.outputs.coveragePath }}

      # Upload results of the tests
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ${{ steps.tests.outputs.artifactsPath }}

      # Upload results of test coverage
      - name: Upload Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: Coverage results
          path: ${{ steps.tests.outputs.coveragePath }}

      # Build
      # - name: Build project
      #   uses: game-ci/unity-builder@v2
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #   with:
      #     targetPlatform: Linux
      #     allowDirtyBuild: true

      # Upload build result
      # - name: Upload Coverage Results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Build
      #     path: build